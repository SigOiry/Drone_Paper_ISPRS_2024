{
  "hash": "b695e98cd5ce8decedd0bc752cf36ca4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"PREPRINT -- Exploring diverse Applications of Drone Technology: From Active to Passive  Remote Sensing  -- PREPRINT.\"\nauthor:\n  - name: Simon Oiry\n    orcid: 0000-0001-7161-5246\n    corresponding: true\n    email: oirysimon@gmail.com\n    roles:\n      - Investigation\n      - Writing\n      - Data acquisition\n    affiliations:\n      - Institut des Substances et Organismes de la Mer, ISOMer, Nantes Université, UR 2160, F-44000 Nantes, France\n  - name: Philippe Rosa\n    corresponding: false\n    roles: \n      - Data acquisition\n      - Revision\n    affiliations:\n      - Institut des Substances et Organismes de la Mer, ISOMer, Nantes Université, UR 2160, F-44000 Nantes, France\n  - name: Laurent Barillé\n    corresponding: false\n    roles: \n      - Investigation\n      - Data acquisition\n      - Revision\n    affiliations:\n      - Institut des Substances et Organismes de la Mer, ISOMer, Nantes Université, UR 2160, F-44000 Nantes, France\nkeywords:\n  - Drone\n  - Remote Sensing\n  - Coastal Ecosystems\n  - Archeology\n  - LiDAR\nabstract: |\n  coucou\nplain-language-summary: \nkey-points:\n  - A review of drone technologies applied to coastal ecology, \ndate: last-modified\ncitation:\n  container-title: Journal of photogrammetry and Remote Sensing\nnumber-sections: true\nnotebook-links: false\neditor_options: \n  chunk_output_type: console\ncsl: RSE.csl\n---\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(terra)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: le package 'terra' a été compilé avec la version R 4.3.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nterra 1.7.71\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(sf) \n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: le package 'sf' a été compilé avec la version R 4.3.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLinking to GEOS 3.11.2, GDAL 3.8.2, PROJ 9.3.1; sf_use_s2() is TRUE\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(rnaturalearth) \n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: le package 'rnaturalearth' a été compilé avec la version R 4.3.3\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(rnaturalearthdata) \n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: le package 'rnaturalearthdata' a été compilé avec la version R 4.3.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttachement du package : 'rnaturalearthdata'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nL'objet suivant est masqué depuis 'package:rnaturalearth':\n\n    countries110\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(rnaturalearthhires)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: le package 'ggplot2' a été compilé avec la version R 4.3.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: le package 'tidyr' a été compilé avec la version R 4.3.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: le package 'readr' a été compilé avec la version R 4.3.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: le package 'purrr' a été compilé avec la version R 4.3.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: le package 'stringr' a été compilé avec la version R 4.3.2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: le package 'lubridate' a été compilé avec la version R 4.3.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ tidyr::extract() masks terra::extract()\n✖ dplyr::filter()  masks stats::filter()\n✖ dplyr::lag()     masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(Utilities.Package)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLe chargement a nécessité le package : cowplot\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: le package 'cowplot' a été compilé avec la version R 4.3.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttachement du package : 'cowplot'\n\nL'objet suivant est masqué depuis 'package:lubridate':\n\n    stamp\n\nLe chargement a nécessité le package : patchwork\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: le package 'patchwork' a été compilé avec la version R 4.3.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttachement du package : 'patchwork'\n\nL'objet suivant est masqué depuis 'package:cowplot':\n\n    align_plots\n\nL'objet suivant est masqué depuis 'package:terra':\n\n    area\n\nLe chargement a nécessité le package : magrittr\n\nAttachement du package : 'magrittr'\n\nL'objet suivant est masqué depuis 'package:purrr':\n\n    set_names\n\nL'objet suivant est masqué depuis 'package:tidyr':\n\n    extract\n\nLes objets suivants sont masqués depuis 'package:terra':\n\n    extract, inset\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(patchwork)\nlibrary(tidyterra)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: le package 'tidyterra' a été compilé avec la version R 4.3.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttachement du package : 'tidyterra'\n\nL'objet suivant est masqué depuis 'package:stats':\n\n    filter\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nmy_comma<-scales::label_comma(accuracy = NULL, big.mark = \",\",decimal.mark = \".\")\n```\n:::\n\n\n\n\n## Site study\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nworld_map <- sovereignty10 %>% \n  st_as_sf()\n\nbbox_europe <- st_bbox(c(xmin = -20, ymin = 34,\n                         xmax = 30, ymax = 55) ,\n                       crs = st_crs(world_map)) \n\nworld_map<-st_make_valid(world_map) \n\neuropean_union_country <- st_crop(world_map, bbox_europe)  %>% \n  st_transform(\"+proj=laea +lat_0=52 +lon_0=10 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs \") %>% \n  dplyr::pull(unique(SOVEREIGNT))\n\n\neuropean_union_map_cropped <- sovereignty10 %>% \n  st_as_sf() %>% \n  dplyr::filter(SOVEREIGNT %in% european_union_country)\n\nProjects<-data.frame(\n  Name=c(\n  \"Spain - Guadalquivir River\",\n  \"Spain - Baiona\",\n  \"France - Noirmoutier Island\",\n  \"Greece - Cape Tainaron\"),\n  Long=c(-6.23104,\n         -8.86272, \n         -2.16741,\n         22.486823) ,\n  Lat=c(36.8947, \n        42.120795,\n        46.9076,\n        36.401765) \n  )  %>% \n  st_as_sf(coords=c(\"Long\",\"Lat\") )  %>% \n  st_set_crs(\"EPSG:4326\")  %>% \n  st_transform(\"+proj=laea +lat_0=52 +lon_0=10 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs \")  \n\nProjects_df<-Projects %>%\n  dplyr::mutate(lon = sf::st_coordinates(.) [,1],\n                lat = sf::st_coordinates(.) [,2]) %>% \n  sf::st_set_geometry(NULL)  %>% \n  tidyr::separate(Name, into=c(\"Country\",\"Site\") ,sep=\" - \")  %>% \n  dplyr::mutate(Country=as.factor(Country) ,\n                Site=as.factor(Site) ) \n\nsf_use_s2(FALSE)\n\nbbox_EU <- st_bbox(c(xmin = -30, ymin = 20,\n                         xmax = 50, ymax = 70) ,\n                       crs = st_crs(european_union_map_cropped) ) \n\n  MiniEU_map<-st_crop(european_union_map_cropped, bbox_EU)  %>% \n  st_transform(\"+proj=laea +lat_0=52 +lon_0=10 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs \")  \n\n  df_P1<-Projects_df %>% \n    dplyr::mutate(ID = c(1:nrow(.)),\n           ID = case_when(ID == 1 ~ \"C\",\n                          ID == 2 ~ \"B\",\n                          ID == 3 ~ \"A\",\n                          TRUE ~ \"D\")) %>% \n    dplyr::select(c(lon,lat,ID,Site))\n    \n    scaleFUN <- function(x) paste0(sprintf(\"%.2f\", x),\"°N\")\n  \n\np1 <-\n  ggplot(MiniEU_map) +\n  geom_sf(linewidth=0.5,alpha=0.93,\n          fill=\"#CFCFCF\",colour=\"grey30\")+\n  coord_sf(xlim=c(2600000,5600000) ,\n          ylim=c(1600000,3100000))+\n    ggforce::geom_mark_ellipse(data=df_P1,\n                 aes(x=lon,\n                     y=lat,\n                     label = ID,\n                     description=Site) ,\n                 linewidth=0.2,\n                 fill=\"goldenrod\",\n                 show.legend=F,\n                 label.hjust = 0.5,\n                 con.size = 1,\n                 con.colour = \"goldenrod4\",\n                 label.fontsize = c(20,15),\n                 alpha=0.8,\n  expand = unit(2, \"mm\") , \n  radius = unit(2, \"mm\") , \n  label.buffer = unit(5, \"mm\") ,\n  label.fill = \"grey90\")+\n\n  theme_Bede_Map()+\n  labs(x=\"Longitude\",\n       y=\"Latitude\")+\n  scale_y_continuous(labels=scaleFUN)+\n  theme(plot.margin = margin(t = 0.1, r = 2, b = 0.1, l = 0.1, \"cm\"),\n        axis.title = element_blank(),\n        axis.text.x = element_text(size = 20),\n        axis.text.y = element_text(size = 20),\n        # panel.background = element_rect(fill = \"white\"),\n        plot.background = element_rect(fill = \"white\"))\n\n\n\nggsave(\"Figures/High_res/Figure1/Map_Study_Site.tiff\",p1,width= 10, height=5)  \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nmasks_Noirmoutier <- \"Data/shp/Figure1/Noirmoutier_masks_32630.shp\"%>% \n  read_sf()\n\nFlight_Noirmoutier <- \"Data/shp/Figure1/Noirmoutier_flight_area_32630.shp\"%>% \n  read_sf()\n\nFlight_label<-data.frame(\n  Name=c(\n  \"Noirmoutier Island\") ,\n  Description = c(\"Multispectral - LiDAR\"),\n  Long=c(-2.17503) ,\n  Lat=c(46.90546) \n  )  %>% \n  st_as_sf(coords=c(\"Long\",\"Lat\") )  %>% \n  st_set_crs(\"EPSG:4326\")  %>% \n  st_transform(crs(masks_Noirmoutier))  %>% \n  dplyr::mutate(lon = sf::st_coordinates(.) [,1],\n                lat = sf::st_coordinates(.) [,2]) %>% \n  sf::st_set_geometry(NULL)\n\nplot_label_Noirmoutier <- data.frame(x = 551000+((569800-551000)*0.05),\n                         y = 5210500-((5210500-5191700)*0.05)) %>% \n  st_as_sf(coords=c(\"x\",\"y\")) %>% \n  st_set_crs(crs(masks_Noirmoutier)) %>% \n  st_coordinates()\n\nNoirmoutier_plot <-\nggplot() +\n  scale_fill_manual(\"\", labels = c(\"Flight area\",\"Intertidal area\", \"Land area\"),\n                    values = c(\"darkred\",\"#7DC27D\", \"#CFCFCF\"))+\n  geom_sf(data = masks_Noirmoutier, mapping = aes(fill = Type),linewidth=0.05,alpha=0.93,colour=\"grey30\")+\n  geom_sf(data = Flight_Noirmoutier, mapping = aes(fill = Type),linewidth=0.05,alpha=0.80)+\n      coord_sf(xlim=c(551000,569800),\n               ylim=c(5191700,16800+5193700))+\n  ggforce::geom_mark_ellipse(data=Flight_label,\n                 aes(x=lon,\n                     y=lat,\n                     label = Name,\n                     group = Name,\n                     description=Description),\n                 size=0.3,\n                 fill = \"goldenrod\",\n                 con.colour = \"goldenrod4\",\n                 show.legend=F,\n                 label.fontsize = 25,\n                 label.hjust = 0.5,\n                 con.size = 2,\n                 label.width = 100,\n                 alpha=0.8,\n  expand = unit(2, \"mm\") , \n  radius = unit(2, \"mm\") ,\n  label.fill = \"grey90\",\n  label.buffer = unit(5, \"mm\")) +\n    # theme_void()+\n  theme_Bede_Map()+\n  labs(x=\"Longitude\",\n       y=\"Latitude\")+\n  geom_label(aes(x = plot_label_Noirmoutier[1], y = plot_label_Noirmoutier[2], label = \"A\"), size = 20)+\n  scale_x_continuous(breaks = seq(-2.30, -2.0, by = 0.10))+\n  theme(plot.margin = unit(c(0.1,0.1,0.1,0.1), \"cm\") ,\n        legend.position = \"none\",\n        axis.title = element_blank(),\n        axis.text.x = element_text(size = 20),\n        axis.text.y = element_text(size = 20),\n        plot.background = element_rect(fill = \"white\"))\n\n\nggsave(\"Figures/High_res/Figure1/Map_Noirmoutier.tiff\",Noirmoutier_plot,width= 10, height=10)  \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nmasks_Vigo <- \"Data/shp/Figure1/Vigo_masks_32629.shp\"%>% \n  read_sf()\n\nFlight_Vigo <- \"Data/shp/Figure1/Vigo_flight_area_32629.shp\"%>% \n  read_sf()\n\n\nFlight_label_Vigo<-data.frame(\n  Name=c(\n  \"Baiona\") ,\n  Description = c(\"Multispectral - LiDAR\"),\n  Long=c(-8.862174) ,\n  Lat=c(42.121263) \n  )  %>% \n  st_as_sf(coords=c(\"Long\",\"Lat\") )  %>% \n  st_set_crs(\"EPSG:4326\")  %>% \n  st_transform(crs(masks_Vigo))  %>% \n  dplyr::mutate(lon = sf::st_coordinates(.) [,1],\n                lat = sf::st_coordinates(.) [,2]) %>% \n  sf::st_set_geometry(NULL)\n\nplot_label_Vigo <- data.frame(x = 509877+((514679-509877)*0.05),\n                         y = 4666200-((4666200-4661398)*0.05)) %>% \n  st_as_sf(coords=c(\"x\",\"y\")) %>% \n  st_set_crs(crs(masks_Vigo)) %>% \n  st_coordinates()\n\nVigo_plot <- ggplot() +\n  scale_fill_manual(\"\", labels = c(\"Flight area\",\"Intertidal area\", \"Land area\"),\n                    values = c(\"darkred\",\"#7DC27D\", \"#CFCFCF\"))+\n  geom_sf(data = masks_Vigo, mapping = aes(fill = Type),linewidth=0.05,alpha=0.93,colour=\"grey30\")+\n  geom_sf(data = Flight_Vigo, mapping = aes(fill = Type),linewidth=0.05,alpha=0.80)+\n  coord_sf(xlim=c(509877,514679),\n               ylim=c(4661398, 4661398 + 4802))+\n  ggforce::geom_mark_ellipse(data=Flight_label_Vigo,\n                 aes(x=lon,\n                     y=lat,\n                     label = Name,\n                     group = Name,\n                     description=Description),\n                 size=0.3,\n                 fill = \"goldenrod\",\n                 con.colour = \"goldenrod4\",\n                 show.legend=F,\n                 label.fontsize = 25,\n                 label.hjust = 0.5,\n                 con.size = 2,\n                 label.width = 100,\n                 alpha=0.8,\n  expand = unit(2, \"mm\") , \n  radius = unit(2, \"mm\") ,\n  label.fill = \"grey90\",\n  label.buffer = unit(5, \"mm\")) +\n    # theme_void()+\n  theme_Bede_Map()+\n  labs(x=\"Longitude\",\n       y=\"Latitude\")+\n  geom_label(aes(x = plot_label_Vigo[1], y = plot_label_Vigo[2], label = \"B\"), size = 20)+\n  scale_x_continuous(breaks = seq(-8.9, -8.80, by = 0.02))+\n  scale_y_continuous(position = \"right\")+\n\n  theme(plot.margin = unit(c(0.1,0.1,0.1,0.1), \"cm\") ,\n        legend.position = \"none\",\n        axis.title = element_blank(),\n        axis.text.x = element_text(size = 20),\n        axis.text.y = element_text(size = 20),\n        plot.background = element_rect(fill = \"white\"))\n\n\nggsave(\"Figures/High_res/Figure1/Map_Vigo.tiff\",Vigo_plot,width= 10, height=10)  \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nmasks_Cadiz <- \"Data/shp/Figure1/Cadiz_masks_32629.shp\"%>% \n  read_sf()\n\n\nFlight_label_Cadiz<-data.frame(\n  Name=c(\n  \"La Esparraguera - Tarfia\") ,\n  Description = c(\"Multispectral\"),\n  Long=c(-6.231733) ,\n  Lat=c(36.894668) \n  )  %>% \n  st_as_sf(coords=c(\"Long\",\"Lat\") )  %>% \n  st_set_crs(\"EPSG:4326\")  %>% \n  st_transform(crs(masks_Cadiz))  %>% \n  dplyr::mutate(lon = sf::st_coordinates(.) [,1],\n                lat = sf::st_coordinates(.) [,2]) %>% \n  sf::st_set_geometry(NULL)\n\nplot_label_Cadiz <- data.frame(x = 691004+((774599-691004)*0.05),\n                         y = 4116948-((4116948-4033353)*0.05)) %>% \n  st_as_sf(coords=c(\"x\",\"y\")) %>% \n  st_set_crs(crs(masks_Cadiz)) %>% \n  st_coordinates()\n\nCadiz_plot <- ggplot() +\n  scale_fill_manual(\"\", labels = c(\"Intertidal area\", \"Land area\"),\n                    values = c(\"#7DC27D\", \"#CFCFCF\"))+\n  geom_sf(data = masks_Cadiz, mapping = aes(fill = Type),linewidth=0.05,alpha=0.93,colour=\"grey30\")+\n  # geom_sf(data = Flight_Vigo, mapping = aes(fill = Type),linewidth=0.05,alpha=0.93)+\n      coord_sf(xlim=c(691004,774599),\n               ylim=c(4033353, 4033353 + 83595))+\n  ggforce::geom_mark_ellipse(data=Flight_label_Cadiz,\n                 aes(x=lon,\n                     y=lat,\n                     label = Name,\n                     group = Name,\n                     description=Description),\n                 size=0.3,\n                 fill = \"goldenrod\",\n                 con.colour = \"goldenrod4\",\n                 show.legend=F,\n                 label.fontsize = 25,\n                 label.hjust = 0.5,\n                 con.size = 2,\n                 alpha=0.8,\n  expand = unit(2, \"mm\") , \n  radius = unit(2, \"mm\") ,\n  label.fill = \"grey90\",\n  label.buffer = unit(5, \"mm\")) +\n    # theme_void()+\n  theme_Bede_Map()+\n  labs(x=\"Longitude\",\n       y=\"Latitude\")+\n  geom_label(aes(x = plot_label_Cadiz[1], y = plot_label_Cadiz[2], label = \"C\"), size = 20)+\n  scale_x_continuous(breaks = seq(-6.9, -5.9, by = 0.4))+\n  scale_y_continuous(breaks = seq(36.45, 37.25, by = 0.2))+\n  theme(plot.margin = unit(c(0.1,0.1,0.1,0.1), \"cm\") ,\n        legend.position = \"none\",\n        axis.title = element_blank(),\n        axis.text.x = element_text(size = 20),\n        axis.text.y = element_text(size = 20),\n        plot.background = element_rect(fill = \"white\"))\n\n\nggsave(\"Figures/High_res/Figure1/Map_Cadiz.tiff\",Cadiz_plot,width= 10, height=10)  \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nmasks_Tainaron <- \"Data/shp/Figure1/Tainaron_masks_32634.shp\"%>% \n  read_sf()\n\nFlight_Tainaron <- \"Data/shp/Figure1/Tainaron_flight_area_32634.shp\"%>% \n  read_sf()\n\nFlight_label_Tainaron<-data.frame(\n  Name=c(\n  \"Cape Tainaron\") ,\n  Description = c(\"LiDAR\"),\n  Long=c(22.486439) ,\n  Lat=c(36.401831) \n  )  %>% \n  st_as_sf(coords=c(\"Long\",\"Lat\") )  %>% \n  st_set_crs(\"EPSG:4326\")  %>% \n  st_transform(crs(masks_Tainaron))  %>% \n  dplyr::mutate(lon = sf::st_coordinates(.) [,1],\n                lat = sf::st_coordinates(.) [,2]) %>% \n  sf::st_set_geometry(NULL)\n\nplot_label_Tainaron <- data.frame(x = 630943+((635617-630943)*0.05),\n                         y = 4032305-((4032305-4027631)*0.05)) %>% \n  st_as_sf(coords=c(\"x\",\"y\")) %>% \n  st_set_crs(crs(masks_Tainaron)) %>% \n  st_coordinates()\n\nTainaron_plot <- ggplot() +\n  scale_fill_manual(\"\", labels = c(\"Flight area\",\"Land area\"),\n                    values = c(\"darkred\",\"#CFCFCF\"))+\n  geom_sf(data = masks_Tainaron, mapping = aes(fill = Type),linewidth=0.05,alpha=0.93,colour=\"grey30\")+\n  geom_sf(data = Flight_Tainaron, mapping = aes(fill = Type),linewidth=0.05,alpha=0.80)+\n      coord_sf(xlim=c(630943,635617),\n               ylim=c(4027631, 4027631 + 4674))+\n  ggforce::geom_mark_ellipse(data=Flight_label_Tainaron,\n                 aes(x=lon,\n                     y=lat,\n                     label = Name,\n                     group = Name,\n                     description=Description),\n                 size=0.3,\n                 fill = \"goldenrod\",\n                 con.colour = \"goldenrod4\",\n                 show.legend=F,\n                 label.fontsize = 25,\n                 label.hjust = 0.5,\n                 con.size = 2,\n                 alpha=0.8,\n  expand = unit(2, \"mm\") , \n  radius = unit(2, \"mm\") ,\n  label.fill = \"grey90\",\n  label.buffer = unit(5, \"mm\")) +\n    # theme_void()+\n  theme_Bede_Map()+\n  labs(x=\"Longitude\",\n       y=\"Latitude\")+\n  geom_label(aes(x = plot_label_Tainaron[1], y = plot_label_Tainaron[2], label = \"D\"), size = 20)+\n  scale_x_continuous(breaks = seq(22.45, 22.52, by = 0.02))+\n  theme(plot.margin = unit(c(0.1,0.1,0.1,0.1), \"cm\") ,\n        legend.position = \"none\",\n        axis.title = element_blank(),\n        axis.text.x = element_text(size = 20),\n        axis.text.y = element_text(size = 20),\n        plot.background = element_rect(fill = \"white\"))\n\n\nggsave(\"Figures/High_res/Figure1/Map_Tainaron.tiff\",Tainaron_plot,width= 10, height=10)  \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlayout <- c(\n  patchwork::area(t = 1, l = 1, b = 10, r = 20),\n  patchwork::area(t = 11, l = 1, b = 20, r = 10),\n  patchwork::area(t = 11, l = 11, b = 20, r = 20),\n  patchwork::area(t = 21, l = 1, b = 30, r = 10),\n  patchwork::area(t = 21, l = 11, b = 30, r = 20)\n)\n\nTot <-  rast(\"Figures/High_res/Figure1/Map_Study_Site.tiff\")\next(Tot)<-c(0,2,0,1)\n\nBB <-  rast(\"Figures/High_res/Figure1/Map_Noirmoutier.tiff\")\next(BB)<-c(0,1,-1,0)\n\nVig <-  rast(\"Figures/High_res/Figure1/Map_Vigo2.tif\")\next(Vig)<-c(1,2,-1,0)\n\nCad <-  rast(\"Figures/High_res/Figure1/Map_Cadiz.tiff\")\next(Cad)<-c(0,1,-2,-1)\n\nTai <- rast(\"Figures/High_res/Figure1/Map_Tainaron2.tiff\")\next(Tai)<-c(1,2,-2,-1)\n\n\na<-ggplot()+\n    geom_spatraster_rgb(data = Tot, maxcell= 10e+7)+\n  geom_spatraster_rgb(data = BB, maxcell= 10e+7)+\n  geom_spatraster_rgb(data = Vig, maxcell= 10e+7)+\n  geom_spatraster_rgb(data = Cad, maxcell= 10e+7)+\n  geom_spatraster_rgb(data = Tai, maxcell= 10e+7)+\n  coord_equal()+\n  theme_void()+\n  theme(axis.text = element_blank(), \n        axis.title = element_blank(), \n        axis.ticks = element_blank(), \n        axis.ticks.length = unit(0, \"pt\"),\n        panel.grid.major=element_blank(), \n        panel.grid.minor=element_blank(), \n        plot.margin = margin(0, 0, 0, 0, \"pt\"))\n\n\n\nggplot2::ggsave(\"./Figures/High_res/Figure1/Fig1_Map_Drone_Sites.png\",a, dpi = 800)\n```\n:::\n\n::: {#cell-fig-map .cell}\n\n```{.r .cell-code .hidden}\nknitr::include_graphics(\"./Figures/Low_res/Figure1/Fig1_Map_Drone_Sites.png\")\n```\n\n::: {.cell-output-display}\n![Location of drone flights in France Spain and Greece A: Noirmoutier Island, B: Baiona, C: Guadalquivir river, D: Tainaron cape. Green represents intertidal areas.\n](./Figures/Low_res/Figure1/Fig1_Map_Drone_Sites.png){#fig-map width=100%}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}